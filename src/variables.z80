; OBJECT STRUCTURE
_set(`charStruct', `start', 0)       
; bit 7 = is active?
; bit 6 = direction (1 = left, 0 = right)
; bit 5-0 = object type
_set(`charStruct', `info', 0)       
_set(`charStruct', `y', 1)           ; Y position of object (unsigned 8.8)
_set(`charStruct', `x', 3)           ; X position of object (unsigned 16.8)
_set(`charStruct', `anim', 6)        ; Animation number
_set(`charStruct', `animFrame', 7)   ; Frame # of animation
_set(`charStruct', `animSpeed', 8)   ; Speed of animation
_set(`charStruct', `animTimer', 9)   ; Timer to keep track of frame
_set(`charStruct', `dx', 10)         ; Horiz. speed (signed 8.8)
_set(`charStruct', `dy', 12)         ; Vert. speed (signed 8.8)
_set(`charStruct', `sizeof', 14)     ; Size of struct
_set(`charStruct', `next', 14)       ; Offset to next struct

FieldHeight EQU $88

SECTION "Variables",WRAM0[$C000]
WramStart:

;SECTION "ObjectTable",WRAM0[$C100]
; Define (6 or 8?) objects
charArray:
DS _get(`charStruct', `sizeof') * 6
charStruct_end:


SECTION "SpriteTable",WRAMX[$DF00]
SpriteTable:
	DS $9F
SpriteTable_End:
; Stack pointer @ $DFFF
WramEnd:

SECTION "HiRAM",HRAM
HramStart: ; 127 bytes

; Permanent section
SpriteDMA_HiRAM:
	DS 10

GlobalTimer:
	DS 1
WaitingForVBlank: ; 0 = waiting, 1 = busy
	DS 1

JoypadButtons: ; First nybble (left to right) is direction, second is buttons
	DS 1
LastButtons:
	DS 1

FieldX:
	DS 2
ActiveObjectsBitfield ; Bit 7 = Object 1, Bit 0 = Object 8
	DS 1
ActiveObjectsCount
	DS 1
TurnInfo:
	; Bit 7: Team selected by player. 0 = gecko, 1 = snowfox
	; Bit 6: Team currently on offense
	DS 1

NextScanlineAction: ; Next scanline's action
	DS 1
NextScanlineArg: ; Argument for next scanline's action
	DS 1
ScanlineEffectsPointer:
	DS 2

; Temp var section
; Expect a lot of overlap if I run out of HiRAM
SpriteY: ; DrawSprite
	DS 1
SpriteX:
	DS 1
SpriteAttribs:
	DS 1
SpriteFrame:
	DS 1
SpriteCount:
	DS 1
SpriteSize:
	DS 1

HramEnd:

